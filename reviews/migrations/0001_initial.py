# Generated by Django 3.1 on 2020-10-03 18:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('operators', '0001_initial'),
        ('places', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicFieldPark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicFieldParkValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=1000, null=True)),
                ('dynamic_field', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.dynamicfieldpark')),
            ],
        ),
        migrations.CreateModel(
            name='FieldOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ParkReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.CharField(max_length=1000)),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(max_length=300)),
                ('email_sent', models.BooleanField(default=False)),
                ('pearls_of_wisdom', models.TextField(blank=True, null=True)),
                ('rejection_text', models.TextField(blank=True, null=True)),
                ('days_booked', models.IntegerField(blank=True, null=True)),
                ('friend_recommend', models.BooleanField()),
                ('overall_rating', models.IntegerField()),
                ('status', models.CharField(choices=[('PE', 'Pending'), ('RE', 'Rejected'), ('AC', 'Active')], default='PE', max_length=40)),
                ('reject_reason', models.CharField(blank=True, max_length=4000, null=True)),
                ('kudu_count', models.IntegerField(default=0)),
                ('views_count', models.IntegerField(blank=True, null=True)),
                ('quality_wildlife_rating', models.IntegerField()),
                ('quality_lodging_rating', models.IntegerField()),
                ('crowdedness_rating', models.IntegerField()),
                ('book_lodging', models.BooleanField()),
                ('visit_date', models.DateField()),
                ('activities', models.ManyToManyField(blank=True, to='places.Activity')),
                ('animals', models.ManyToManyField(blank=True, to='places.Animal')),
                ('country_written', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='places.country')),
                ('dynamic_field_values', models.ManyToManyField(blank=True, to='reviews.DynamicFieldParkValue')),
                ('park', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='park_reviews', to='places.park')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SafariType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='KilimanjaroParkReview',
            fields=[
                ('parkreview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reviews.parkreview')),
                ('reached_summit', models.BooleanField()),
                ('take_medications', models.BooleanField()),
                ('route_to_climb', models.CharField(blank=True, choices=[('LE', 'Lemosho'), ('MC', 'Machame'), ('MR', 'Marangu'), ('NC', 'Northern Circuit'), ('RO', 'Rongai'), ('SH', 'Shira'), ('UM', 'Umbwe')], default=None, max_length=40)),
                ('other_route_to_climb', models.CharField(blank=True, default=None, max_length=40, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('reviews.parkreview',),
        ),
        migrations.CreateModel(
            name='TourOperatorReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.CharField(max_length=1000)),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(max_length=300)),
                ('email_sent', models.BooleanField(default=False)),
                ('pearls_of_wisdom', models.TextField(blank=True, null=True)),
                ('rejection_text', models.TextField(blank=True, null=True)),
                ('days_booked', models.IntegerField(blank=True, null=True)),
                ('friend_recommend', models.BooleanField()),
                ('status', models.CharField(choices=[('PE', 'Pending'), ('RE', 'Rejected'), ('AC', 'Active')], default='PE', max_length=40)),
                ('reject_reason', models.CharField(blank=True, max_length=4000, null=True)),
                ('views_count', models.IntegerField(blank=True, null=True)),
                ('did_not_go', models.BooleanField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('meet_and_greet_rating', models.IntegerField()),
                ('responsiveness_rating', models.IntegerField()),
                ('safari_quality_rating', models.IntegerField()),
                ('itinerary_quality_rating', models.IntegerField()),
                ('overall_rating', models.IntegerField()),
                ('vehicle_rating', models.IntegerField()),
                ('response', models.TextField(null=True)),
                ('response_date', models.DateField(null=True)),
                ('response_email_sent', models.BooleanField(default=False)),
                ('reached_summit', models.BooleanField(default=False)),
                ('take_medications', models.BooleanField(default=False)),
                ('route_to_climb', models.CharField(blank=True, choices=[('LE', 'Lemosho'), ('MC', 'Machame'), ('MR', 'Marangu'), ('NC', 'Northern Circuit'), ('RO', 'Rongai'), ('SH', 'Shira'), ('UM', 'Umbwe')], default=None, max_length=40, null=True)),
                ('other_route_to_climb', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('find_out', models.CharField(blank=True, choices=[('A friend/family recommended them', 'A friend/family recommended them'), ('Google search', 'Google search'), ('Trade show', 'Trade show'), ('Article in newspaper/magazine', 'Article in newspaper/magazine'), ('Website', 'Website')], max_length=40, null=True)),
                ('find_out_website', models.CharField(blank=True, max_length=600, null=True)),
                ('kudu_count', models.IntegerField(default=0)),
                ('activities', models.ManyToManyField(blank=True, to='places.Activity')),
                ('animals', models.ManyToManyField(blank=True, to='places.Animal')),
                ('country_indexes', models.ManyToManyField(blank=True, related_name='tour_operator_reviews', to='places.CountryIndex')),
                ('country_written', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='places.country')),
                ('dynamic_field_values', models.ManyToManyField(blank=True, to='reviews.DynamicFieldParkValue')),
                ('parks', models.ManyToManyField(blank=True, to='places.Park')),
                ('safari_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.safaritype')),
                ('tour_operator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tour_operator_reviews', to='operators.touroperator')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('CHARFIELD', 'CharField'), ('CHOICE', 'Choice')], default='CHARFIELD', max_length=100)),
                ('options', models.ManyToManyField(blank=True, to='reviews.FieldOptions')),
            ],
        ),
        migrations.AddField(
            model_name='dynamicfieldpark',
            name='field_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.fieldtype'),
        ),
        migrations.AddField(
            model_name='dynamicfieldpark',
            name='parks',
            field=models.ManyToManyField(blank=True, to='places.Park'),
        ),
    ]
